//zhangchao@wind-mobi.com 20170330 begin
/*
 * Copyright (C) 2015 MediaTek Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef _CUST_BATTERY_METER_TABLE_H
#define _CUST_BATTERY_METER_TABLE_H

#define BAT_NTC_10 1
#define BAT_NTC_47 0

#if (BAT_NTC_10 == 1)
#define RBAT_PULL_UP_R             16900
#endif

#if (BAT_NTC_47 == 1)
#define RBAT_PULL_UP_R             61900
#endif

#define RBAT_PULL_UP_VOLT          1800

typedef struct _BATTERY_PROFILE_STRUCT {
	signed int percentage;
	signed int voltage;
} BATTERY_PROFILE_STRUCT, *BATTERY_PROFILE_STRUCT_P;

typedef struct _R_PROFILE_STRUCT {
	signed int resistance;
	signed int voltage;
} R_PROFILE_STRUCT, *R_PROFILE_STRUCT_P;

typedef enum {
	T1_0C,
	T2_25C,
	T3_50C
} PROFILE_TEMPERATURE;

#if (BAT_NTC_10 == 1)
BATT_TEMPERATURE Batt_Temperature_Table[] = {
	{-20, 68237},
	{-15, 53650},
	{-10, 42506},
	{ -5, 33892},
	{  0, 27219},
	{  5, 22021},
	{ 10, 17926},
	{ 15, 14674},
	{ 20, 12081},
	{ 25, 10000},
	{ 30, 8315},
	{ 35, 6948},
	{ 40, 5834},
	{ 45, 4917},
	{ 50, 4161},
	{ 55, 3535},
	{ 60, 3014}
};
#endif

#if (BAT_NTC_47 == 1)
	BATT_TEMPERATURE Batt_Temperature_Table[] = {
	{-20, 483954},
	{-15, 360850},
	{-10, 271697},
	{ -5, 206463},
	{  0, 158214},
	{  5, 122259},
	{ 10, 95227},
	{ 15, 74730},
	{ 20, 59065},
	{ 25, 47000},
	{ 30, 37643},
	{ 35, 30334},
	{ 40, 24591},
	{ 45, 20048},
	{ 50, 16433},
	{ 55, 13539},
	{ 60, 11210}
	};
#endif

/* T0 -10C */
BATTERY_PROFILE_STRUCT battery_profile_t0[] = 
{
	{0,4383},
	{2,4350},
	{5,4324},
	{6,4301},
	{9,4278},
	{11,4255},
	{14,4233},
	{15,4211},
	{17,4189},
	{20,4167},
	{22,4146},
	{25,4125},
	{26,4104},
	{29,4083},
	{31,4063},
	{34,4043},
	{36,4023},
	{37,4004},
	{40,3986},
	{42,3970},
	{45,3953},
	{46,3937},
	{49,3921},
	{52,3906},
	{55,3892},
	{57,3879},
	{58,3867},
	{61,3855},
	{63,3844},
	{66,3834},
	{68,3824},
	{70,3814},
	{72,3806},
	{75,3798},
	{77,3790},
	{78,3783},
	{81,3777},
	{83,3771},
	{86,3765},
	{88,3760},
	{90,3754},
	{92,3748},
	{95,3741},
	{97,3734},
	{100,3726},
	{101,3718},
	{103,3708},
	{106,3696},
	{108,3684},
	{110,3671},
	{112,3657},
	{115,3641},
	{117,3620},
	{120,3593},
	{121,3572},
	{121,3561},
	{122,3549},
	{122,3538},
	{123,3527},
	{123,3517},
	{123,3506},
	{125,3495},
	{125,3486},
	{125,3475},
	{125,3465},
	{125,3454},
	{125,3446},
	{126,3436},
	{126,3427},
	{126,3418},
	{126,3411},
	{126,3402},
	{126,3395},
	{126,3386},

};





/* T1 0C */
BATTERY_PROFILE_STRUCT battery_profile_t1[] = 
{
	{0,4383},
	{2,4356},
	{4,4333},
	{5,4312},
	{8,4291},
	{10,4269},
	{12,4248},
	{13,4226},
	{15,4205},
	{17,4184},
	{20,4164},
	{22,4143},
	{23,4123},
	{25,4103},
	{26,4084},
	{28,4065},
	{29,4046},
	{32,4027},
	{34,4009},
	{36,3991},
	{37,3973},
	{39,3956},
	{41,3940},
	{44,3924},
	{46,3908},
	{47,3894},
	{49,3881},
	{51,3869},
	{53,3858},
	{54,3848},
	{57,3838},
	{59,3829},
	{61,3821},
	{63,3814},
	{64,3806},
	{66,3800},
	{69,3793},
	{71,3787},
	{72,3782},
	{74,3777},
	{75,3772},
	{77,3768},
	{78,3763},
	{81,3758},
	{83,3751},
	{85,3745},
	{87,3737},
	{88,3727},
	{90,3716},
	{93,3703},
	{95,3689},
	{96,3672},
	{98,3658},
	{100,3645},
	{102,3624},
	{105,3574},
	{106,3457},
	{107,3390},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},
	{108,3345},

};





/* T2 25C */
BATTERY_PROFILE_STRUCT battery_profile_t2[] = 
{
	{0,4382},
	{2,4354},
	{4,4330},
	{5,4308},
	{7,4286},
	{9,4265},
	{11,4244},
	{12,4222},
	{14,4202},
	{16,4181},
	{19,4160},
	{20,4140},
	{22,4121},
	{24,4102},
	{26,4083},
	{27,4064},
	{29,4047},
	{31,4030},
	{33,4013},
	{34,3997},
	{36,3981},
	{38,3966},
	{40,3950},
	{42,3933},
	{43,3915},
	{45,3898},
	{47,3882},
	{49,3868},
	{51,3856},
	{53,3845},
	{55,3836},
	{57,3826},
	{58,3819},
	{60,3811},
	{62,3805},
	{64,3798},
	{65,3792},
	{67,3787},
	{69,3782},
	{71,3777},
	{73,3772},
	{74,3766},
	{76,3759},
	{78,3751},
	{80,3744},
	{81,3736},
	{83,3731},
	{86,3723},
	{88,3713},
	{89,3702},
	{91,3689},
	{93,3674},
	{95,3665},
	{96,3656},
	{98,3643},
	{100,3599},
	{102,3508},
	{103,3359},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},
	{105,3005},

};





/* T3 50C */
BATTERY_PROFILE_STRUCT battery_profile_t3[] = 
{
	{0,4373},
	{2,4347},
	{4,4324},
	{5,4302},
	{7,4280},
	{9,4260},
	{11,4238},
	{12,4218},
	{14,4196},
	{16,4176},
	{19,4156},
	{20,4136},
	{22,4116},
	{24,4098},
	{26,4080},
	{27,4061},
	{29,4044},
	{31,4027},
	{33,4011},
	{35,3996},
	{36,3981},
	{38,3966},
	{40,3952},
	{42,3937},
	{43,3919},
	{45,3900},
	{47,3882},
	{49,3870},
	{51,3858},
	{53,3847},
	{55,3839},
	{57,3829},
	{59,3821},
	{60,3814},
	{62,3808},
	{64,3801},
	{66,3795},
	{67,3789},
	{69,3784},
	{71,3780},
	{73,3774},
	{74,3761},
	{76,3749},
	{78,3741},
	{80,3733},
	{81,3726},
	{84,3720},
	{86,3712},
	{88,3702},
	{90,3691},
	{91,3679},
	{93,3665},
	{95,3658},
	{97,3649},
	{98,3634},
	{100,3583},
	{102,3492},
	{104,3346},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},
	{105,3016},

};





/* battery profile for actual temperature. The size should be the same as T1, T2 and T3 */
BATTERY_PROFILE_STRUCT battery_profile_temperature[] = {
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}
};

/* T0 -10C */
R_PROFILE_STRUCT r_profile_t0[] = {
	{828,  4383},
	{828,  4350},
	{835,  4324},
	{835,  4301},
	{833,  4278},
	{828,  4255},
	{828,  4233},
	{823,  4211},
	{823,  4189},
	{818,  4167},
	{815,  4146},
	{815,  4125},
	{813,  4104},
	{810,  4083},
	{810,  4063},
	{810,  4043},
	{810,  4023},
	{810,  4004},
	{808,  3986},
	{805,  3970},
	{810,  3953},
	{815,  3937},
	{815,  3921},
	{815,  3906},
	{818,  3892},
	{823,  3879},
	{828,  3867},
	{830,  3855},
	{835,  3844},
	{843,  3834},
	{848,  3824},
	{850,  3814},
	{858,  3806},
	{865,  3798},
	{870,  3790},
	{878,  3783},
	{885,  3777},
	{893,  3771},
	{903,  3765},
	{918,  3760},
	{928,  3754},
	{943,  3748},
	{958,  3741},
	{973,  3734},
	{990,  3726},
	{1015, 3718},
	{1040, 3708},
	{1073, 3696},
	{1118, 3684},
	{1185, 3671},
	{1280, 3657},
	{1435, 3641},
	{1703, 3620},
	{2150, 3593},
	{2443, 3572},
	{2408, 3561},
	{2395, 3549},
	{2368, 3538},
	{2350, 3527},
	{2320, 3517},
	{2323, 3506},
	{2280, 3495},
	{2220, 3486},
	{2238, 3475},
	{2273, 3465},
	{2280, 3454},
	{2205, 3446},
	{2263, 3436},
	{2250, 3427},
	{2123, 3418},
	{2070, 3411},
	{2210, 3402},
	{2160, 3395},
	{2200, 3386} 
};

/* T1 0C */
R_PROFILE_STRUCT r_profile_t1[] = {
	{413,  4383},
	{413,  4356},
	{413,  4333},
	{418,  4312},
	{420,  4291},
	{415,  4269},
	{418,  4248},
	{418,  4226},
	{410,  4205},
	{413,  4184},
	{415,  4164},
	{415,  4143},
	{413,  4123},
	{413,  4103},
	{415,  4084},
	{418,  4065},
	{418,  4046},
	{413,  4027},
	{413,  4009},
	{410,  3991},
	{410,  3973},
	{408,  3956},
	{400,  3940},
	{400,  3924},
	{393,  3908},
	{403,  3894},
	{398,  3881},
	{395,  3869},
	{398,  3858},
	{405,  3848},
	{405,  3838},
	{410,  3829},
	{410,  3821},
	{413,  3814},
	{418,  3806},
	{423,  3800},
	{425,  3793},
	{420,  3787},
	{425,  3782},
	{430,  3777},
	{435,  3772},
	{438,  3768},
	{440,  3763},
	{443,  3758},
	{443,  3751},
	{445,  3745},
	{453,  3737},
	{455,  3727},
	{463,  3716},
	{473,  3703},
	{480,  3689},
	{500,  3672},
	{533,  3658},
	{595,  3645},
	{720,  3624},
	{953,  3574},
	{1865, 3457},
	{2005, 3390},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345},
	{1875, 3345} 	
};

/* T2 25C */
R_PROFILE_STRUCT r_profile_t2[] = {
	{168,  4382},
	{168,  4354},
	{168,  4330},
	{170,  4308},
	{168,  4286},
	{173,  4265},
	{173,  4244},
	{173,  4222},
	{178,  4202},
	{178,  4181},
	{178,  4160},
	{183,  4140},
	{188,  4121},
	{190,  4102},
	{193,  4083},
	{193,  4064},
	{198,  4047},
	{200,  4030},
	{200,  4013},
	{205,  3997},
	{203,  3981},
	{208,  3966},
	{205,  3950},
	{200,  3933},
	{190,  3915},
	{185,  3898},
	{180,  3882},
	{175,  3868},
	{175,  3856},
	{173,  3845},
	{175,  3836},
	{175,  3826},
	{178,  3819},
	{180,  3811},
	{183,  3805},
	{180,  3798},
	{185,  3792},
	{190,  3787},
	{193,  3782},
	{193,  3777},
	{193,  3772},
	{193,  3766},
	{190,  3759},
	{188,  3751},
	{188,  3744},
	{183,  3736},
	{188,  3731},
	{188,  3723},
	{188,  3713},
	{188,  3702},
	{188,  3689},
	{185,  3674},
	{188,  3665},
	{198,  3656},
	{215,  3643},
	{215,  3599},
	{230,  3508},
	{270,  3359},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005},
	{1053, 3005} 	
};

/* T3 50C */
R_PROFILE_STRUCT r_profile_t3[] = {
	{110,  4373},
	{110,  4347},
	{110,  4324},
	{113,  4302},
	{110,  4280},
	{113,  4260},
	{113,  4238},
	{115,  4218},
	{113,  4196},
	{115,  4176},
	{115,  4156},
	{115,  4136},
	{115,  4116},
	{118,  4098},
	{123,  4080},
	{120,  4061},
	{123,  4044},
	{123,  4027},
	{125,  4011},
	{128,  3996},
	{130,  3981},
	{133,  3966},
	{138,  3952},
	{138,  3937},
	{130,  3919},
	{123,  3900},
	{115,  3882},
	{115,  3870},
	{113,  3858},
	{113,  3847},
	{115,  3839},
	{113,  3829},
	{113,  3821},
	{113,  3814},
	{118,  3808},
	{118,  3801},
	{118,  3795},
	{120,  3789},
	{123,  3784},
	{125,  3780},
	{128,  3774},
	{115,  3761},
	{113,  3749},
	{115,  3741},
	{118,  3733},
	{118,  3726},
	{118,  3720},
	{118,  3712},
	{118,  3702},
	{118,  3691},
	{118,  3679},
	{115,  3665},
	{120,  3658},
	{125,  3649},
	{130,  3634},
	{130,  3583},
	{140,  3492},
	{168,  3346},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016},
	{608,  3016} 
};

/* r-table profile for actual temperature. The size should be the same as T1, T2 and T3 */
R_PROFILE_STRUCT r_profile_temperature[] = {
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}
};

/* ============================================================
// function prototype
// ============================================================*/
int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUCT_P fgauge_get_profile(unsigned int temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUCT_P fgauge_get_profile_r_table(unsigned int temperature);

#endif	/*#ifndef _CUST_BATTERY_METER_TABLE_H*/

//zhangchao@wind-mobi.com 20170330 end
